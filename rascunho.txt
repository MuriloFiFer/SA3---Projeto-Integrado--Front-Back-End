.botoes {
    display: inline-block;
    padding: 1rem;
    border-radius: 10px;
    word-spacing: 8px;
    font-weight: 700;
    font-family: sans-serif;
    text-transform: uppercase;
    letter-spacing: 2px;
    color: white;
    background-color: rgba(201, 197, 197, 0.671);
    transition: .3s;
    cursor: pointer;
  }


   

#botao1{
    background-color: D9D9D9;
    width: 25%;
    height: 40px;
    border-radius: 10%;
    border: none;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 140%;
    }
  
    #botao2{
    background-color: D9D9D9;
    width: 25%;
    height: 40px;
    border-radius: 10%;
    border: none;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 140%;
    margin-left: 5%;
      }
  
      #contBotao2{
          width: 100%;     
          margin-top: 5%;
          
         
         
      }
  
      #colBotao2{
          margin-left: 30%;       
          width: 100%;                  
      }
  

  /// RASCUNHO PHP  register.PHP

  <?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Conectar ao banco de dados
$servername = "localhost";
$username = "postgres";
$password = "postgres";
$dbname = "murilo"; // nome do banco

$conn = new mysqli($servername, $username, $password, $dbname);

// Verificar a conexão
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Recuperar dados do formulário
$name = $_POST['name'];
$email = $_POST['email'];
$password = $_POST['password'];

// Hash da senha (recomendado para segurança)
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);

// Usar instruções preparadas para evitar injeção de SQL
$sql = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
$sql->bind_param("sss", $name, $email, $hashedPassword);

if ($sql->execute()) {
    echo "Usuário registrado com sucesso!";
} else {
    echo "Erro ao registrar usuário: " . $sql->error;
}

$sql->close();
$conn->close();
?>
///////////


////RASCUNHO CONFIG.PHP<?php
<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Configurações de conexão com o banco de dados
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "bancoanimart"; //nome do banco

// Criar conexão
$conn = new mysqli($servername, $username, $password, $dbname);

// Verificar a conexão
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

///RASCUNHO LOGIN.PHP

<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Conectar ao banco de dados
$servername = "localhost";
$username = "postgres";
$password = "postgres";
$dbname = "murilo"; // Substitua pelo nome do seu banco de dados

$conn = new mysqli($servername, $username, $password, $dbname);

// Verificar a conexão
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Recuperar dados do formulário
$email = $_POST['email'];
$password = $_POST['password'];

// Usar instruções preparadas para evitar injeção de SQL
$sql = $conn->prepare("SELECT * FROM users WHERE email=?");
$sql->bind_param("s", $email);

$sql->execute();
$result = $sql->get_result();

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $storedPassword = $row['password'];

    // Verificar se a senha fornecida corresponde à senha armazenada
    if (password_verify($password, $storedPassword)) {
        echo "Login bem-sucedido!";
    } else {
        echo "Erro ao fazer login. Verifique suas credenciais.";
    }
} else {
    echo "Erro ao fazer login. Verifique suas credenciais.";
}

$sql->close();
$conn->close();
?>
